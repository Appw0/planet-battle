; The order of things in level files are rather important, as behavior is undefined otherwise
; It should go [info] -> [map] -> [everything else in whatever order] -> [tiles]
; To restate with words, [info] must be first, [map] follows info, and [tiles] must be at the end

[info]
name = Test Level
spawnPoints = 10

[map]
########################################
#@..................  .................#
#.........VVVV......  ..............P..#
#...................  ..X..............#
#...................  ..X..............#
#...................  ..X..............#
#.....LLL...........  ..X..............#
#.....LLL...........  ..X.........S....#
#.....LLL...........  ..X..............#
#...................  ..X..............#
#.......................X..............#
#...................  ..X........B.....#
#...................  ..X........B.....#
#......D.K..........  ...........B.....#
#...................  ...........B.....#
########################################

[player]
leave = .

; actor always spawns a single actor, but can have many possible positions
[actor]
where = S
actor = cyberSlime
leave = .

; will chose an actor randomly from a comma seperated list, and can be weighted by
; duplicating entries.
; it will spawn as many as possible within the spawnPoints of the level if countMin or countMax
; are not defined
; it can also optionally have its own unique spawnPoints, which it won't share with anything else
[actorRandom]
where = X
actors = slime,slime,slime,bigSlime,scuttleDrone
leave = .
countMin = 3
countMax = 5

[actorRandom]
where = B
actors = bigSlime
leave = .

[actorRandom]
where = V
actors = cyberSlime
leave = .
spawnPoints = 10

[item]
where = K
item = thingsaboutrobots1
leave = .

[item]
where = D
item = cybercrime1
leave = .

[itemRandom]
where = L
items = laser1,monsterLaser3,knife100
leave = .
countMin = 4
countMax = 6

[portal]
where = P
goto = TestLevel2
leave = .

[tiles]
# = wall1
. = floor1,floor2
